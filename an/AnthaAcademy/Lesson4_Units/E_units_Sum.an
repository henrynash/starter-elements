protocol Units_Sum

import (
	"github.com/antha-lang/antha/antha/anthalib/wunit"
)
// Input parameters for this protocol
Parameters (
	MyVolume Volume
    MyOtherVolume Volume
	

)

// Data which is returned from this protocol
Data (
	SumOfVolumes Volume
)

// Physical inputs to this protocol
Inputs (

)

// Physical outputs from this protocol
Outputs (
)

Requirements {

}

// Actions to perform before protocol itself
Setup {

}

// Core process of the protocol: steps to be performed for each input
Steps {

///*

var sumofSIValues float64
var siUnit string

sumofSIValues = MyVolume.SIValue() + MyOtherVolume.SIValue()

siUnit = MyVolume.Unit().BaseSISymbol()

// or a less safe but simpler way would be 
// siUnit = "l"

SumOfVolumes = wunit.NewVolume(sumofSIValues,siUnit) 

//*/

// Exercise: this is quite a convoluted way of doing this so instead we could create a function to perform this task
// try doing this below

// Approach 1:
//writing something like the AddVolume func written below the validation section 

//e.g. 
//SumOfVolumes = AddVolume(MyVolume,MyOtherVolume)

// Approach 2: 
// using anthalib funcs and methods


SumOfVolumes = (wunit.CopyVolume(MyVolume))

SumOfVolumes.Add(MyOtherVolume)





}


// Actions to perform after steps block to analyze data
Analysis {

}

Validation {

}


/*
// this is how to write a function in go and use it in an antha protocol
func AddVolume(myvolume wunit.ConcreteMeasurement, myothervolume wunit.ConcreteMeasurement )(newvolume wunit.ConcreteMeasurement) {

var sumofSIValues float64
var siUnit string

sumofSIValues = myvolume.SIValue() + myothervolume.SIValue()

siUnit = myvolume.Unit().BaseSISymbol()

// or a less safe but simpler way would be 
// siUnit = "l"

newvolume = wunit.NewVolume(sumofSIValues,siUnit) 
	return
}
*/